{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","handleClick","bind","fetch","then","response","json","body","setState","e","this","target","value","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAEaA,G,kBAAO,SAACC,GACjB,OAAO,sBAAKC,UAAU,iBAAf,UACH,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCHbC,EAAW,SAAAR,GAEpB,OADAS,QAAQC,IAAIV,GACL,qBAAKC,UAAU,YAAf,SAECD,EAAMW,SAASC,KAAI,SAAAR,GACf,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCL7BQ,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OAAO,uBACHd,UAAU,SACVe,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoDHG,E,kDAvDb,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IAEDmB,MAAQ,CACXR,SAAU,GACVS,YAAa,IAGf,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAEnB,EAAKP,aAAe,EAAKA,aAAaO,KAAlB,gBAVH,E,gEAcE,IAAD,OAElBC,MAAM,8CACHC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAEjB,SAAUgB,S,oCAK1ClB,QAAQC,IAAI,sB,mCAKDmB,GACXC,KAAKF,SAAS,CAAER,YAAaS,EAAEE,OAAOC,U,+BAG9B,IAAD,EAE2BF,KAAKX,MAA/BR,EAFD,EAECA,SAAUS,EAFX,EAEWA,YAEZa,EAAmBtB,EAASuB,QAAO,SAAA9B,GAAO,OAC9CA,EAAQE,KAAK6B,cAAcC,SAAShB,EAAYe,kBAGlD,OACE,sBAAKlC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEa,YAAa,kBACbC,aAAce,KAAKf,eACrB,cAAC,EAAD,CAAUJ,SAAUsB,W,GAjDVI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a1b8f347.chunk.js","sourcesContent":["import './card.styles.css'\r\n\r\nexport const Card = (props) => {\r\n    return <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n}","import './card-list.styles.css'\r\nimport { Card } from '../card/card.component'\r\n\r\nexport const CardList = props => {\r\n    console.log(props)\r\n    return <div className=\"card-list\">\r\n        {\r\n            props.monsters.map(monster => {\r\n                return <Card key={monster.id} monster={monster} />\r\n            })\r\n        }\r\n    </div>\r\n}","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n    return <input\r\n        className=\"search\"\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n}\r\n\r\n","import './App.css';\nimport { Component } from 'react'\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n\n    this.handleClick = this.handleClick.bind(this)\n\n    this.handleChange = this.handleChange.bind(this)\n\n  }\n\n  componentDidMount() {\n\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => {\n        return response.json()\n      })\n      .then(body => this.setState({ monsters: body }))\n\n  }\n\n  handleClick() {\n    console.log('esto es un click')\n    // this.setState({\n    // })\n  }\n\n  handleChange(e) {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n\n    const { monsters, searchField } = this.state\n\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder={'search monsters'}\n          handleChange={this.handleChange} />\n        <CardList monsters={filteredMonsters} />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}